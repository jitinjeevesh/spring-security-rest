buildscript {
    ext {
        springBootVersion = '1.2.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

/*war {
    baseName = 'spring-boot-template'
    version = '0.0.1-SNAPSHOT'
}*/
sourceCompatibility = 1.7
targetCompatibility = 1.7

ext {
    scalaVersion = '2.10'
    metricsVersion = '2.2.0'
    springIntegrationVersion = '4.0.3.RELEASE'
}

repositories {
    mavenCentral()
    maven {
        url "http://maven.ow2.org/maven2/"
    }
    maven { url "http://maven.ow2.org/maven2-snapshot" }
}

configurations {
    providedRuntime
}

project(':Spring-security-REST') {
    configurations {
        providedRuntime
    }
    dependencies {
        providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    }
}

dependencies {
    compile project(':Spring-security-REST')
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.25'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '4.2.2.Final'
    compile group: 'org.springframework', name: 'spring-orm', version: '4.0.0.RELEASE'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.10'
//    compile("org.springframework.boot:spring-boot-starter-data-jpa")
//    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-integration")
    compile("org.springframework.boot:spring-boot-starter-web")

//    providedRuntime("org.eclipse.jetty:jetty-server:9.3.2.v20150730")

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
springBoot {
    mainClass = "sample.Application"
}
